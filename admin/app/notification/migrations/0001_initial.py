# Generated by Django 4.0.5 on 2022-06-29 18:11

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MessageTag",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("tag", models.CharField(max_length=255, verbose_name="Title")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationGroup",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationType",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("subject", models.CharField(max_length=255, verbose_name="Subject")),
                ("code", models.TextField(default="", verbose_name="HTML code or Text")),
                (
                    "notification_type",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.notificationtype"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationUnsubscribeUser",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("user", models.UUIDField()),
                (
                    "notification_type",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.notificationtype"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationTypeTag",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "notification_type",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.notificationtype"),
                ),
                ("tag", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.messagetag")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="notificationtype",
            name="tags",
            field=models.ManyToManyField(through="notification.NotificationTypeTag", to="notification.messagetag"),
        ),
        migrations.CreateModel(
            name="NotificationGroupUser",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("user", models.UUIDField()),
                (
                    "notification_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="notification.notificationgroup"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="notificationgroup",
            name="notification_type",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.notificationtype"),
        ),
        migrations.CreateModel(
            name="Context",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("params", models.JSONField(default=dict)),
                (
                    "template",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.template"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.TextField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "send_status",
                    models.CharField(
                        choices=[("waiting", "Waiting"), ("processing", "Processing"), ("done", "Done")],
                        default="waiting",
                        max_length=50,
                        verbose_name="Send status",
                    ),
                ),
                ("send_date", models.DateTimeField(auto_now=True)),
                ("context", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="notification.Context")),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
